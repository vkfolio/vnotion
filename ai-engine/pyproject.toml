[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vnotions-ai-engine"
version = "1.0.0-alpha"
description = "Privacy-first AI engine for VNotions knowledge management"
authors = [
    {name = "VNotions Team"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["ai", "knowledge-management", "privacy", "local-first"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Groupware",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "langgraph>=0.0.55",
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-community>=0.0.10",
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "ollama>=0.1.7",
    "numpy>=1.25.2",
    "pandas>=2.1.4",
    "sentence-transformers>=2.2.2",
    "sqlalchemy>=2.0.23",
    "aiosqlite>=0.19.0",
    "pyyaml>=6.0.1",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.2",
    "aiofiles>=23.2.0",
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    "rich>=13.0.0",
    "scikit-learn>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "black>=23.11.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/vnotions/vnotions"
Repository = "https://github.com/vnotions/vnotions"
Documentation = "https://github.com/vnotions/vnotions/blob/main/ai-engine/README.md"
Issues = "https://github.com/vnotions/vnotions/issues"

[project.scripts]
vnotions-ai = "start:main"

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*", "scripts*"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]